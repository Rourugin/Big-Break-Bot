import os
from aiogram.types import Message, CallbackQuery
from aiogram.filters import CommandStart, Command
from aiogram import F, Router, Bot
from aiogram.fsm.context import FSMContext
from dotenv import load_dotenv

import app.keyboards as kb
import app.states as st
import app.database.requests as rq


load_dotenv()
router = Router()
bot = Bot(token=os.getenv('TOKEN'))


@router.message(CommandStart())
async def cmd_start(message: Message) -> None:
    await bot.send_message(chat_id=os.getenv('ADMIN_ID'), text=f'–±–æ—Ç –±—ã–ª –∑–∞–ø—É—â–µ–Ω {message.from_user.username}')
    await rq.set_user(message.from_user.id)
    await bot.send_sticker(message.from_user.id, sticker="CAACAgQAAxkBAAEMPJ9mXMO9h75Yd1Ax5JUJndL6Bpta8wAC9AIAAtkjZCGmdye4daM15DUE")
    await message.answer(f'{message.from_user.first_name}, –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é —Ç–µ–±—è –≤ –±–æ—Ç–µ –í–¥–æ—Ö–Ω–æ–≤–∏—Ç–µ–ª–µ–π! üëã \n\n\n–ó–¥–µ—Å—å —Ç—ã –º–æ–∂–µ—à—å –ø–æ–∏–≥—Ä–∞—Ç—å –≤ —É–≤–ª–µ–∫–∞—Ç–µ–ª—å–Ω—ã–µ –∏–≥—Ä—ã, –Ω–∞–π—Ç–∏ –ª–µ–∫—Ü–∏–∏ –∏ –º–µ–æ–ø—Ä–∏—è—Ç–∏—è –ø–æ –∏–Ω—Ç–µ—Ä–µ—Å–∞–º, –∞ —Ç–∞–∫–∂–µ –ø–æ–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è —Å–æ –º–Ω–æ–∂–µ—Å—Ç–≤–æ–º —É–¥–∏–≤–∏—Ç–µ–ª—å–Ω—ã—Ö –∏ –ø—Ä–∏—è—Ç–Ω—ã—Ö –ª–∏—á–Ω–æ—Å—Ç–µ–π!\n\n–ê –µ—Å–ª–∏ —É —Ç–µ–±—è –≤–æ–∑–Ω–∏–∫—É—Ç –≤–æ–ø—Ä–æ—Å—ã, –ø—Ä–æ—Å—Ç–æ –≤–æ—Å–ø–æ–ª—å–∑—É–π—Å—è –∫–æ–º–∞–Ω–¥–æ–π "–ø–æ–º–æ—â—å" –±–µ–∑ –∫–∞–≤—ã—á–µ–∫ \n\n–¢–∞–∫–∂–µ –Ω–µ –∑–∞–±—É–¥—å –ø–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –Ω–∞—à —Ç–µ–ª–µ–≥—Ä–∞–º-–∫–∞–Ω–∞–ª(@vdoh_vdoh)üòè\n\n–ù–∞–¥–µ—é—Å—å, —Ç–µ–±–µ –ø–æ–Ω—Ä–∞–≤–∏—Ç—å—Å—è —É –Ω–∞—Å!')
    await message.answer('–û—á–µ–Ω—å –ø—Ä–∏—è—Ç–Ω–æ! –ê —Ç–µ–ø–µ—Ä—å –¥–∞–≤–∞–π –ø—Ä–∏—Å—Ç—É–ø–∏–º –∫ —Å–∞–º–æ–º—É –∏–Ω—Ç–µ—Ä–µ—Å–Ω–æ–º—Éüòã \n\n–ß–µ–º —Ö–æ—á–µ—à—å –∑–∞–Ω—è—Ç—å—Å—è?', reply_markup=None)


@router.message(F.text.lower() == '–ø–æ–º–æ—â—å')
async def cmd_help(message: Message) -> None:
    await bot.send_sticker(message.from_user.id, sticker='CAACAgIAAxkBAAEMQCZmYg6ZypS6fNceSw943gOWu0mLjQACeg0AAsCf8Ev-fdx9cnSwwTUE')
    await message.answer('–°—É–¥—è –ø–æ –≤—Å–µ–º—É —É —Ç–µ–±—è –ø—Ä–æ–∏–∑–æ—à–ª–∏ –∫–∞–∫–∏–µ-—Ç–æ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ —à–æ–∫–æ–ª–∞–¥–∫–∏üç´\n\n–ù–∞–¥–µ—é—Å—å –∑–¥–µ—Å—å —Ç—ã –Ω–∞–π–¥—ë—à—å –æ—Ç–≤–µ—Ç –Ω–∞ —Å–≤–æ–π –≤–æ–ø—Ä–æ—Å, –∞ –µ—Å–ª–∏ –Ω–µ—Ç –∏–ª–∏ —Ç—ã –Ω–∞—à—ë–ª(-—à–ª–∞) –∫–∞–∫–æ–π-—Ç–æ –±–∞–≥, —Ç–æ –æ–±—Ä–∞—Ç–∏—Å—å –∫ –Ω–∞–º –ª–∏—á–Ω–æ @Rouruginn –∫ —Ç–≤–æ–∏–º —É—Å–ª—É–≥–∞–º\n\n\n–¢–∞–∫–∂–µ –Ω–µ –∑–∞–±—ã–≤–∞–π –ø—Ä–æ –±—ã—Å—Ç—Ä—ã–µ –∫–æ–º–∞–Ω–¥—ã, –æ–Ω–∏ –Ω–∞–º–Ω–æ–≥–æ —É—Ä–æ—â–∞—é—Ç –∂–∏–∑–Ω—åüò∏\n–ú–µ–Ω—é\n–æ–ø—Ä–æ—Å—ã\n–ú–∞–≥–∞–∑–∏–Ω –∏–ª–∏ –º–∞–≥–∞–∑\n–ò–≥—Ä–∞\n–ù–∞—Å—Ç—Ä–æ–π–∫–∏\n–ø–æ–º–æ—â—å(—Ö–æ—Ç—è —ç—Ç—É —Ç—ã –Ω–∞–≤–µ—Ä–Ω—è–∫–∞ —É–∂–µ –∑–Ω–∞–µ—à—åüôà\n\n–ö—Å—Ç–∞—Ç–∏, –Ω–µ–≤–∞–∂–Ω–æ –∫–∞–∫ —Ç—ã –Ω–∞–ø–∏—à–µ—à—å –∫–æ–º–∞–Ω–¥—É, –±–æ—Ç –≤—Å—ë —Ä–∞–≤–Ω–æ —Ç–µ–±—è –ø–æ–π–º—ë—Ç (–¥–∞–∂–µ –µ—Å–ª–∏ –Ω–∞–ø–∏—Å–∞—Ç—å "–Ω–ê—Å–¢—Ä–û–π–ö–∏"))', reply_markup=None)


@router.message(F.text.lower() == '–º–µ–Ω—é')
async def cmd_menu(message: Message) -> None:
    await bot.send_sticker(message.from_user.id, sticker='CAACAgIAAxkBAAEMSPhmZ1aJsFbV9q4bkHN4Cfs1-wQO7gACIwEAAladvQo3E4Jzu18GwjUE')
    await message.answer('–û–≥–æ, –Ω–µ–æ–∂–∏–¥–∞–ª —Ç–µ–±—è –∑–¥–µ—Å—å —É–≤–∏–¥–µ—Ç—å, –≤ –ª—é–±–æ–º —Å–ª—É—á–∞–µ –æ—Ç—Å—é–¥–∞ —Ç—ã –º–æ–∂–µ—à—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å—Å—è –≤ –ª—é–±—É—é —Ç–æ—á–∫—É –±–æ—Ç–∞!', reply_markup=None)


@router.message(Command(commands='game') or F.text.lower() == '–∏–≥—Ä–∞')
async def cmd_game(message: Message, state: FSMContext) -> None:
    await state.set_state(st.cityRegistr.name)
    await bot.send_sticker('CAACAgIAAxkBAAEMSlFmaJcqGGJYwLxKTiyBS7VARc30HwACmgAD9wLID9HVBvL9etQ4NQQ')
    await message.answer('–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, –≤ —ç—Ç—É... –≤ —ç—Ç–æ—Ç... –≤ —ç—Ç–æ—Ç –ø–æ–∫–∞ —á—Ç–æ –ª–µ—Å, –Ω–æ —è —É–≤–µ—Ä–µ–Ω, —á—Ç–æ —Ç—ã —Å–º–æ–∂–µ—à—å –ø—Ä–µ–≤—Ä–∞—Ç–∏—Ç—å –µ–≥–æ –≤ —á—É–¥–µ—Å–Ω—ã–π –º–µ–≥–∞–ø–æ–ª–∏—Å!')
    await message.answer('–ê —á—Ç–æ –Ω—É–∂–Ω–æ –∫–∞–∂–¥–æ–º—É –Ω–∞—á–∏–Ω–∞—é—â–µ–º—É –≥–æ—Ä–æ–¥—É? \n\n–ü—Ä–∞–≤–ª—å–Ω–æ! –ù–∞–∑–≤–∞–Ω–∏–µ, —Å –Ω–µ–≥–æ –∏ –Ω–∞—á–Ω—ë–º. –ü—Ä–∏–¥—É–º–∞–π –Ω–∞–∑–≤–∞–Ω–∏–µ —Å—Å–≤–æ–µ–º—É –≥–æ—Ä–æ–¥—É!', reply_markup=None)


@router.message(st.cityRegistr.name)
async def game_cityname(message: Message, state: FSMContext) -> None:
    await state.update_data(name=message.text)
    await state.clear()
    await message.answer('–û—Ç–ª–∏—á–Ω–æ! \n\n–ê —Ç–µ–ø–µ—Ä—å –¥–∞–≤–∞–π –ø–æ—Å—Ç–∞–≤–∏–º —Ç–≤–æ–π –ø–µ—Ä–≤—ã–π –¥–æ–º! –î–ª—è —ç—Ç–æ–≥–æ –≤—ã–±–µ—Ä–∏ —Ä–∞–∑–¥–µ–ª "–°—Ç—Ä–æ–∏—Ç–µ–ª—å—Å—Ç–≤–æ", –∞ –≤ –Ω—ë–º "–ó–¥–∞–Ω–∏—è" –∏ –Ω–∞–∂–º–∏—Ç–µ –ø–æ—Å—Ç—Ä–æ–∏—Ç—å, –ø–µ—Ä–≤—ã–π –¥–æ–º –∑–∞ –º–æ–π —Å—á—ë—Ç!', reply_markup=kb.gameMain)


@router.message(F.text.lower() == '–∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è')
async def info_game(message: Message) -> None:
    await message.answer('–ó–¥–µ—Å—å –ø–æ–∫–∞ –Ω–∏—á–µ–≥–æ –Ω–µ—Ç, –≤–µ—Ä–Ω–∏—Ç–µ—Å—å, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –∫ –æ–±—É—á–µ–Ω–∏—é')


@router.message(F.text.lower() == '—Å—Ç—Ä–æ–∏—Ç–µ–ª—å—Å—Ç–≤–æ')
async def construction(message: Message) -> None:
    await message.answer('–ó–¥–µ—Å—å —Ç—ã –º–æ–∂–µ—à—å –≤—ã–±—Ä–∞—Ç—å, —á—Ç–æ —Ö–æ—á–µ—à—å —Å—Ç—Ä–æ–∏—Ç—å, –¥–µ–ª–æ –∑–∞ —Ç–æ–±–æ–π)', reply_markup=kb.gameConstruction)


@router.message(F.text.lower() == '–ø–∞—Ä–∫–∏')
async def parks(message: Message) -> None:
    await message.answer('–ó–¥–µ—Å—å –ø–æ–∫–∞ –Ω–∏—á–µ–≥–æ –Ω–µ—Ç, –≤–µ—Ä–Ω–∏—Ç–µ—Å—å –∫ –æ–±—É—á–µ–Ω–∏—é')


@router.message(F.text.lower() == '–∑–¥–∞–Ω–∏—è')
async def buildings(message: Message) -> None:
    await message.answer('–û—Ç–ª–∏—á–Ω–æ, –∞ —Ç–µ–ø–µ—Ä—å –Ω–∞–∂–º–∏ "–ü–æ—Å—Ç—Ä–æ–∏—Ç—å" –∏ –≤–æ–∑–≤–µ–¥–∏ —Å–≤–æ—ë –ø–µ—Ä–≤–æ–µ –∑–¥–∞–Ω–∏–µ!', reply_markup=kb.build)


@router.callback_query(F.data == 'build')
async def build_frst_house(callback: CallbackQuery) -> None:
    await callback.answer(None)
    await callback.message.answer('–û—Ç–ª–∏—á–Ω–æ, –≤–æ—Ç –∏ —Ç–≤–æ—ë –ø–µ—Ä–≤–æ–µ –∑–¥–∞–Ω–∏–µ! –î–∞–ª—å—à–µ —Ç–µ–±—è –∂–¥—ë—Ç —Å–∞–º–æ—Å—Ç–æ—è—Ç–µ–ª—å–Ω—ã–π –ø—É—Ç—å, –£–¥–∞—á–∏!')
    await callback.message.answer('–ò–Ω—Å—Ç—Ä—É–∫—Ç–∞–∂ –æ–∫–æ–Ω—á–µ–Ω. –ö —Å–æ–∂–∞–ª–µ–Ω–∏—é –æ—Å—Ç–∞–ª—å–Ω–∞—è —á–∞—Å—Ç—å –∏–≥—Ä—ã –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞üò≠', reply_markup=None)


@router.message(Command(commands='timetable') or F.text.lower() == '—Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ')
async def cmd_checklist(message: Message) -> None:
    await message.answer(text='üìù–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ\n\n\n–ó–¥–µ—Å—å —Ç—ã –º–æ–∂–µ—à—å –≤—ã–±—Ä–∞—Ç—å –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã–µ —Ç–µ–±–µ —Å–æ–±—ã—Ç–∏—è –∏ –∑–∞–ø–∏—Å–∞—Ç—å –∏—Ö –≤ —Å–≤–æ—ë —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ.', reply_markup=kb.timetable)


@router.callback_query(F.data == 'changeTimetable')
async def changeTimetable(callback: CallbackQuery) -> None:
    await callback.answer(None)
    await callback.message.answer(text='–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é —ç—Ç–æ –ø–æ–∫–∞ —á—Ç–æ –Ω–µ–≤–æ–∑–º–æ–∂–Ω–æüò∞ \n–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é', reply_markup=None)


@router.message(Command(commands='settings') or F.text.lower() == '–Ω–∞—Å—Ç—Ä–æ–π–∫–∏')
async def cmd_settings(message: Message) -> None:
    await message.answer('‚öô–ù–∞—Å—Ç—Ä–æ–π–∫–∏\n\n\n–ó–¥–µ—Å—å —Ç–∞–∫ –ø—É—Å—Ç–æ...', reply_markup=None)


@router.message(Command(commands='shop') or F.text.lower() == '–º–∞–≥–∞–∑–∏–Ω' or F.text.lower() == '–º–∞–≥–∞–∑')
async def cmd_shop(message: Message) -> None:
    await message.answer('–ó–¥–µ—Å—å —Ç—ã –º–æ–∂–µ—à—å –æ–±–º–µ–Ω—è—Ç—å —Å–≤–æ–∏ –≤–¥–æ—Ö–Ω–æ–≤–ª—è—à–∫–∏ –Ω–∞ –º–µ—Ä—á –í–¥–æ—Ö–Ω–æ–≤–∏—Ç–µ–ª–µ–π\n\n\n–°–µ—É—á–∞—Å —É —Ç–µ–±—è 0 –≤–¥–æ—Ö–Ω–æ–≤–ª—è—à–µ–∫', reply_markup=kb.shopSelect)


@router.callback_query(F.data == 'menu')
async def callback_menu(callback: CallbackQuery) -> None:
    await callback.answer(None)
    await bot.send_sticker(callback.message.from_user.id, sticker='CAACAgIAAxkBAAEMSPhmZ1aJsFbV9q4bkHN4Cfs1-wQO7gACIwEAAladvQo3E4Jzu18GwjUE')
    await callback.message.answer('–û–≥–æ, –Ω–µ–æ–∂–∏–¥–∞–ª —Ç–µ–±—è –∑–¥–µ—Å—å —É–≤–∏–¥–µ—Ç—å, –≤ –ª—é–±–æ–º —Å–ª—É—á–∞–µ –æ—Ç—Å—é–¥–∞ —Ç—ã –º–æ–∂–µ—à—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å—Å—è –≤ –ª—é–±—É—é —Ç–æ—á–∫—É –±–æ—Ç–∞!', reply_markup=None)


@router.callback_query(F.data == 'anklet')
async def callback_anklet(callback: CallbackQuery) -> None:
    await callback.answer(None)
    await callback.message.answer(text='–ë—Ä–∞—Å–ª–µ—Ç –í–¥–æ—Ö–Ω–æ–≤–∏—Ç–µ–ª–µ–π\n\n\n–û–ø–∏—Å–∞–Ω–∏–µ: –ö—Ä—É—Ç–æ–π –±—Ä–∞—Å–ª–µ—Ç –æ—Ç –í–ª–æ—Ö–Ω–æ–≤–∏—Ç–µ–ª–µ–πüòé\n\n\n–°—Ç–æ–∏–º–æ—Å—Ç—å: 20 –≤–¥–æ—Ö–Ω–æ–≤–ª—è—à–µ–∫', reply_markup=kb.buySmth)


@router.callback_query(F.data == 'hoodie')
async def callback_hoodie(callback: CallbackQuery) -> None:
    await callback.answer(None)
    await callback.message.answer(text='–•—É–¥–∏ –í–¥–æ—Ö–Ω–æ–≤–∏—Ç–µ–ª–µ–π\n\n\n–û–ø–∏—Å–∞–Ω–∏–µ: —Ö—É–¥–∏, –≤ –∫–æ—Ç–æ—Ä–æ–º –≤—Å–µ—à–¥–∞ –±—É–¥–µ—Ç —Ç–µ–ø–ª–æ –∏ —É—é—Ç–Ω–æüî•\n\n\n–°—Ç–æ–∏–º–æ—Å—Ç—å: 40 –≤–¥–æ—Ö–Ω–æ–≤–ª—è—à–µ–∫', reply_markup=kb.buySmth)


@router.callback_query(F.data == 'termocup')
async def callback_termocup(callback: CallbackQuery) -> None:
    await callback.answer(None)
    await callback.message.answer(text='–¢–µ—Ä–º–æ–∫—Ä—É–∂–∫–∞ –í–¥–æ—Ö–Ω–æ–≤–∏—Ç–µ–ª–µ–π\n\n\n–û–ø–∏—Å–∞–Ω–∏–µ: –∫—Ä—É–∂–∫–∞ –¥–ª—è –Ω–µ–±–æ–ª—å—à–∏—Ö –ø—Ä–æ–≥—É–ª–æ–∫ —Å –≥–∞–∑–∏—Ä–æ–≤–∫–æ–π –∏ –¥–æ–ª–≥–∏—Ö –ø—É—Ç–µ—à–µ—Å—Ç–≤–∏–π —Å –≥–æ—Ä—è—á–∏–º —á–∞–µ–º\n\n\n–°—Ç–æ–∏–º–æ—Å—Ç—å: 30 –≤–¥–æ—Ö–Ω–æ–≤–ª—è—à–µ–∫', reply_markup=kb.buySmth)


@router.callback_query(F.data == 'comeBack')
async def callback_comeBack(callback: CallbackQuery) -> None:
    await callback.answer(None)
    await callback.message.answer(text='–ó–¥–µ—Å—å —Ç—ã –º–æ–∂–µ—à—å –æ–±–º–µ–Ω—è—Ç—å —Å–≤–æ–∏ –≤–¥–æ—Ö–Ω–æ–≤–ª—è—à–∫–∏ –Ω–∞ –º–µ—Ä—á –í–¥–æ—Ö–Ω–æ–≤–∏—Ç–µ–ª–µ–π\n\n\n–°–µ—É—á–∞—Å —É —Ç–µ–±—è 0 –≤–¥–æ—Ö–Ω–æ–≤–ª—è—à–µ–∫', reply_markup=kb.shopSelect)


@router.callback_query(F.data == 'buy')
async def callback_buy(callback: CallbackQuery) -> None:
    await callback.answer(None)
    await callback.message.answer(text='–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é —ç—Ç–æ –ø–æ–∫–∞ —á—Ç–æ –Ω–µ–≤–æ–∑–º–æ–∂–Ω–æüò≠', reply_markup=None)


@router.message(Command(commands='surveys') or F.text.lower() == '–æ–ø—Ä–æ—Å—ã')
async def surveys(message: Message) -> None:
    await bot.send_sticker(message.from_user.id, sticker='CAACAgIAAxkBAAEMPXxmXhN1QD1q2CkuV8fsjn0vLf-2bAACRQADWbv8JfvUpDThE_jrNQQ')
    await message.answer('–£ –Ω–∞—Å –µ—Å—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ –æ–ø—Ä–æ—Å–æ–≤ –¥–ª—è —Ç–µ–±—è \n\n–° —á–µ–≥–æ —Ö–æ—á–µ—à—å –Ω–∞—á–∞—Ç—å?\n\n1)–í—Å—ë –æ–±–æ –º–Ω–µ\n2)–ù–∞—à –±–æ—Ç', reply_markup=kb.surveys)


@router.callback_query(F.data == 'aboutBot')
async def aboutBot(callback: CallbackQuery) -> None:
    await callback.answer(None)
    await callback.message.answer(text='–¢–≤–æ—ë –º–Ω–µ–Ω–∏–µ –æ—á–µ–Ω—å –ø–æ–º–æ–∂–µ—Ç –Ω–∞–º –≤ —Ä–∞–∑–≤–∏—Ç–∏–∏ –±–æ—Ç–∞! –°–ø–∞—Å–∏–±–æ ‚ù§Ô∏è\n–î–∞–≤–∞–π –Ω–∞—á–Ω—ë–º!', reply_markup=kb.letsStartAB)


@router.message(F.text.lower() == '–ø–æ–µ—Ö–∞–ª–∏!')
async def firstAB(message: Message, state: FSMContext) -> None:
    await state.set_state(st.aboutBotSurvey.howLong)
    await message.answer('–ò–∏–∏–∏–∏–∏–∏–∏...\n–ü–µ—Ä–≤—ã–π –≤–æ–ø—Ä–æ—Å:\n–ö–∞–∫ –¥–∞–≤–Ω–æ —Ç—ã –ø–æ–ª—å–∑—É–µ—à—å—Å—è –±–æ—Ç–æ–º?\n1 - –ú–µ–Ω–µ–µ –º–µ—Å—è—Ü–∞\n2 - 1-3 –º–µ—Å—è—Ü–∞\n3 - 4-6 –º–µ—Å—è—Ü–µ–≤\n4 - 6-12 –º–µ—Å—è—Ü–µ–≤\n5 - –ë–æ–ª–µ–µ 1 –≥–æ–¥–∞\n\n–ü—Ä–æ—Å—å–±–∞ –æ—Ç–≤–µ—Ç–∏—Ç—å –æ–¥–Ω–æ–π –∏–∑ —ç—Ç–∏—Ö —Ü–∏—Ñ—Äüòú', reply_markup=None)


@router.message(st.aboutBotSurvey.howLong)
async def secondAB(message: Message, state: FSMContext) -> None:
    await state.update_data(howLong=message.text)
    await state.set_state(st.aboutBotSurvey.douLike)
    await message.answer('–í—Ç–æ—Ä–æ–π –≤–æ–ø—Ä–æ—Å –∫–∞–ø–µ–ª—å–∫—É –ø–æ—Å–ª–æ–∂–Ω–µ–µüôà\n–ù–∞—Å–∫–æ–ª—å–∫–æ —Ç–µ–±–µ –Ω—Ä–∞–≤–∏—Ç—Å—è –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–æ–≤–∞—Ç—å —Å —ç—Ç–∏–º –±–æ—Ç–æ–º?\n\n1 - –ù–µ –Ω—Ä–∞–≤–∏—Ç—Å—è –≤–æ–æ–±—â–µ\n2 - –í –æ—Å–Ω–æ–≤–Ω–æ–º –Ω–µ –Ω—Ä–∞–≤–∏—Ç—Å—è\n3 - –£–¥–æ–≤–ª–µ—Ç–≤–æ—Ä—è–µ—Ç\n4 - –ù—Ä–∞–≤–∏—Ç—Å—è\n5 - –û—á–µ–Ω—å –Ω–∞–≤–∏—Ç—Å—è\n\n–ù–∞ —ç—Ç–æ—Ç –≤–æ–ø—Ä–æ—Å —Ç–∞–∫–∂–µ –ø–æ–ø—Ä–æ—Å–∏–º –æ—Ç–≤–µ—Ç–∏—Ç—å —á–∏—Å–ª–æ–ºüòâ')


@router.message(st.aboutBotSurvey.douLike)
async def thirdAB(message: Message, state: FSMContext) -> None:
    await state.update_data(douLike=message.text)
    await state.set_state(st.aboutBotSurvey.dontLike)
    await message.answer('–ê –¥–ª—è —Ç—Ä–µ—Ç—å–µ–≥–æ –≤–æ–ø—Ä–æ—Å–∏–∫–∞ –ø—Ä–∏–¥—ë—Ç—Å—è –Ω–µ–º–Ω–æ–≥–æ –ø–æ–ø–∏—Å–∞—Ç—å‚úç\n–ü–æ–¥—É–∞–π, —á—Ç–æ —Ç–µ–±–µ –ù–ï –Ω—Ä–∞–≤–∏—Ç—Å—è –≤ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏–∏ —Å –±–æ—Ç–æ–º —Å–µ–π—á–∞—Å?')


@router.message(st.aboutBotSurvey.dontLike)
async def fourthAB(message: Message, state: FSMContext) -> None:
    await state.update_data(dontLike=message.text)
    await state.set_state(st.aboutBotSurvey.comment)
    await message.answer('–ü—Ä–∏—à–ª–æ –≤—Ä–µ–º—è –¥–ª—è –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –≤–æ–ø—Ä–æ—Å–∞! –û–¥–Ω–∞–∫–æ —Ç—É—Ç —Ç–æ–∂–µ –ø—Ä–∏–¥—ë—Ç—Å—è –Ω–∞–ø—Ä—è—á—å —Ä—É—á–∫–∏. –ù–∞–ø–∏—à–∏ —Å–≤–æ—ë –º–Ω–µ–Ω–∏–µ –æ –±–æ—Ç–µ, —á—Ç–æ —Ç—ã —Ö–æ—Ç–µ–ª(-–∞) –±—ã —É–≤–∏–¥–∏—Ç—å –≤ –Ω—ë–º, —Ä–∞—Å—Å–∫–∞–∂–∏ –æ–±–æ –≤—Å—ë–º.')

@router.message(st.aboutBotSurvey.comment)
async def thxAB(message: Message, state: FSMContext) -> None:
    await state.update_data(comment=message.text)
    await state.clear()
    await message.answer('–°–ø–∞—Å–∏–±–æ –∑–∞ –ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏—è –æ–ø—Ä–æ—Å–∞! –ú—ã —Ç–µ–±–µ –æ—á–µ–Ω—å –±–ª–∞–≥–æ–¥–∞—Ä–Ω—ãüíò\n–¢–µ–ø–µ—Ä—å —Ç—ã –º–æ–∂–µ—à—å –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é, –Ω–∞–∂–∞–≤ –∫–Ω–æ–ø–∫—É –∏–ª–∏ –Ω–∞–ø–∏—Å–∞–≤ "–º–µ–Ω—é" (–±–µ–∑ –∫–∞–≤—ã—á–µ–∫)', reply_markup=None)


@router.callback_query(F.data == 'allAboutMe')
async def startAAM(callback: CallbackQuery) -> None:
    await callback.answer(None)
    await callback.message.answer('–¢—ã –≥–æ—Ç–æ–≤ –∫ —ç—Ç–æ–º—É –æ–ø—Ä–æ—Å—É? –ù–∞–¥–µ—é—Å—å, —á—Ç–æ –¥–∞, –æ–¥–Ω–∞–∫–æ —Ä–µ–∫–æ–º–µ–Ω–¥—É—é –≤—ã–¥–µ–ª–∏—Ç—å –Ω–∞ —ç—Ç–æ—Ç –æ–ø—Ä–æ—Å –ø–æ–±–æ–ª—å—à–µ –≤—Ä–µ–º–µ–Ω–∏, –≤–µ–¥—å  –æ–Ω –Ω–µ —Å–∞–º—ã–π –∫–æ—Ä–æ—Ç–∫–∏–π!', reply_markup=kb.letsStartAAM)


@router.message(F.text.lower() == '–ü–æ–≥–Ω–∞–ª–∏!')
async def frst_q(message: Message, state: FSMContext) -> None:
    await state.set_state(st.allAboutMeSurvey.frst_ans)
    await message.answer('–°–∫–æ–ª—å–∫–æ —Ç–µ–±–µ –ª–µ—Ç?', reply_markup=None)


@router.message(st.allAboutMeSurvey.frst_ans)
async def scnd_q(message: Message, state: FSMContext) -> None:
    await state.update_data(frst_ans=message.text)
    await state.set_state(st.allAboutMeSurvey.scnd_ans)
    await message.answer('–ö–∞–∫–æ–π —É —Ç–µ—é—è –ª—é–±–∏–º—ã–π —Ñ–∏–ª—å–º?')


@router.message(st.allAboutMeSurvey.thrd_ans)
async def thrd_q(message: Message, state: FSMContext) -> None:
    await state.update_data(scnd_ans=message.text)
    await state.set_state(st.allAboutMeSurvey.thrd_ans)
    await message.answer('–ö–∞–∫–æ–π(-–∏–µ) —É —Ç–µ–±—è –ª—é–±–∏–º—ã–π(-—ã–µ) –ø—Ä–µ–¥–º–µ—Ç(-—ã) –≤ —à–∫–æ–ª–µ?')


@router.message(st.allAboutMeSurvey.thrd_ans)
async def frth_q(message: Message, state: FSMContext) -> None:
    await state.update_data(thrd_ans=message.text)
    await state.set_state(st.allAboutMeSurvey.frth_ans)
    await message.answer('–õ—é–±–∏—à—å –ª–∏ —Ç—ã –Ω–∞—Å—Ç–æ–ª—å–Ω—ã–µ –∏–≥—Ä—ã/–∏–≥—Ä—ã –Ω–∞ —Å–≤–µ–∂–µ–º –≤–æ–∑–¥—É—Ö–µ, –µ—Å–ª–∏ –¥–∞, —Ç–æ –∫–∞–∫–∏–µ?')


@router.message(st.allAboutMeSurvey.frth_ans)
async def ffth_q(message: Message, state: FSMContext) -> None:
    await state.update_data(frth_ans=message.text)
    await state.set_state(st.allAboutMeSurvey.ffth_ans)
    await message.answer('–¢—ã –∏–≥—Ä–∞–µ—à—å –Ω–∞ –∫–∞–∫–æ–º-–Ω–∏–±—É–¥—å –º—É–∑—ã–∫–∞–ª—å–Ω–æ–º –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–µ? –ï—Å–ª–∏ –¥–∞, —Ç–æ –Ω–∞ –∫–∞–∫–æ–º. –ï—Å–ª–∏ –Ω–µ—Ç, —Ç–æ –Ω–∞ –∫–∞–∫–æ–º —Ç—ã –±—ã —Ö–æ—Ç–µ–ª(-–∞) –Ω–∞—É—á–∏—Ç—å—Å—è –∏–≥—Ä–∞—Ç—å?')


@router.message(st.allAboutMeSurvey.ffth_ans)
async def sxth_q(message: Message, state: FSMContext) -> None:
    await state.update_data(ffth_ans=message.text)
    await state.set_state(st.allAboutMeSurvey.sxth_ans)
    await message.answer('–ö–∞–∫–∞—è —Ç–≤–æ—è –ª—é–±–∏–º–∞—è –∫–Ω–∏–≥–∞?')


@router.message(st.allAboutMeSurvey.sxth_ans)
async def svnth_q(message: Message, state: FSMContext) -> None:
    await state.update_data(sxth_ans=message.text)
    await state.set_state(st.allAboutMeSurvey.svth_ans)
    await message.answer('–ß—Ç–æ —Ç—ã —Å—á–∏—Ç–∞–µ—à—å —É—Å–ø–µ—à–Ω—ã–º –æ–±—É—á–µ–Ω–∏–µ–º?')


@router.message(st.allAboutMeSurvey.svth_ans)
async def eghth_q(message: Message, state: FSMContext) -> None:
    await state.update_data(svnth_ans=message.text)
    await state.set_state(st.allAboutMeSurvey.ghth_ans)
    await message.answer('–ï—Å–ª–∏ –±—ã –≤—ã —Å –¥—Ä—É–∑—å—è–º–∏ —Å—Ç–∞–≤–∏–ª–∏ –∫–æ–Ω—Ü–µ—Ä—Ç, –∫–µ–º –±—ã —Ç—ã —Ö–æ—Ç–µ–ª(-–∞) –±—ã –±—ã—Ç—å?')


@router.message(st.allAboutMeSurvey.ghth_ans)
async def nnth_q(message: Message, state: FSMContext) -> None:
    await state.update_data(ghth_ans=message.text)
    await state.set_state(st.allAboutMeSurvey.nnth_ans)
    await message.answer('–ö–µ–º —Ç—ã —Å–µ–±—è —Å—á–∏—Ç–∞–µ—à—å –≤ –∫–æ–º–ø–∞–Ω–∏–∏ —Å–≤–æ–∏—Ö –¥—Ä—É–∑–µ–π?')


@router.message(st.allAboutMeSurvey.nnth_ans)
async def tnth_q(message: Message, state: FSMContext) -> None:
    await state.update_data(nnth_ans=message.text)
    await state.clear()
    await message.answer('–û–≥—Ä–æ–º–Ω–æ–µ —Å–ø–∞—Å–∏–±–æ –∑–∞ –ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏—è –æ–ø—Ä–æ—Å–∞, –±–ª–∞–≥–æ–¥–∞—Ä—è —ç—Ç–æ–º—É —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ —É–ª—É—á—à–∞—Ç—å—Å—è, –∏ —Ç—ã –±—É–¥–µ—à—å –ø–æ–ª—É—á–∞—Ç—å –±–æ–ª–µ–µ –∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—ã–π –∫–æ–Ω—Ç–µ–Ω—Ç!')